Account
    balance Milray

Payday
    date UTCTime


Transaction
    ts     UTCTime
    credit AccountId Maybe
    debit  AccountId Maybe
    payday PaydayId  Maybe
    amount Milray
    reason Text
    info   Text      Maybe

User
    ident             Text
    email             Text         Maybe
    email_verified    Bool                  default=false
    createdTs         UTCTime      Maybe
    hash              Text         Maybe
    salt              Text         Maybe
    name              Text         Maybe
    account           AccountId
    avatar            Text         Maybe
    blurb             Markdown     Maybe
    statement         Markdown     Maybe
    ircNick           Text         Maybe
    languages         [Language]
    readNotifications UTCTime            default=now()
    -- ^ The last time the user visited /notifications
    readApplications  UTCTime            default=now()
    established       Established        default='EstUnestablished'
    discussion        DiscussionId       default=nextval('discussion_id_seq'::regclass)

    UniqueUser ident
    UniqueUserAccount account
    UniqueUserDiscussion discussion
    deriving Show Typeable

ResetPassword
    user  UserId
    email Text
    uri   Text
    sent  Bool   default=false  -- for the email daemon

    UniquePasswordReset user email uri

EmailVerification
    user  UserId
    email Text   -- user's email at the time when the 'uri' was generated
    uri   Text                  -- verification link
    sent  Bool   default=false  -- was it sent by the email daemon?

    UniqueEmailVerification user email uri

DeleteConfirmation
    user  UserId
    email Text
    uri   Text
    sent  Bool   default=false  -- for the email daemon

    UniqueDeleteConfirmation user email uri

-- A single notification preference. If some NotificationType does not appear
-- in any row for a particular user, that means the user does not wish to be
-- notified of those notifications.
--
-- Notifications that "must" be delivered (e.g. administrative notifications
-- directly from Snowdrift) don't need an entry in this table, as the code that
-- sends such notifications needn't query it.
UserNotificationPref
    user     UserId
    type     UserNotificationType
    delivery UserNotificationDelivery

    UniqueUserNotificationPref user type

-- Preferences for projects watched by a user.
ProjectNotificationPref
    user     UserId
    project  ProjectId
    type     ProjectNotificationType
    delivery ProjectNotificationDelivery

    UniqueProjectNotificationPref user project type

-- User-watching-project relation
UserWatchingProject
    user    UserId
    project ProjectId

    UniqueUserWatchingProject user project

-- TODO(mitchell) is this used?
UserSetting
    user    UserId
    setting UserSettingName
    value String

ViewTime
    user    UserId
    project ProjectId
    type    ViewType
    time    UTCTime   default=now()

    UniqueViewTimeUserProjectType user project type

-- A viewing of a single comment. The existence of this of a row here indicates
-- the comment has been viewed by the user; the absence indicates it hasnt.
ViewComment
    user    UserId
    comment CommentId

    UniqueViewComment user comment

-- A viewing of a single wiki page edit. The existence of this of a row here
-- indicates the edit has been viewed by the user; the absence indicates it
-- hasnt.
ViewWikiEdit
    user UserId
    edit WikiEditId

    UniqueViewWikiEdit user edit

License
    name         LicenseName
    type         LicenseType
    projectTypes [LicenseProjectType]
    text         LicenseText
    website      LicenseWebsite

Project
    createdTs   UTCTime
    name        Text
    handle      Text
    description Text
    blurb       Markdown
    account     AccountId
    shareValue  Milray
    lastPayday  PaydayId     Maybe
    githubRepo  Text         Maybe
    discussion  DiscussionId       default=nextval('discussion_id_seq'::regclass)
    public      Bool               default=true
    logo        Text         Maybe

    UniqueProjectAccount account
    UniqueProjectHandle handle
    UniqueProjectDiscussion discussion

    deriving Eq Show

ProjectSignup
    name               ProjectSignupName
    website            ProjectSignupWebsite             Maybe
    handle             ProjectSignupHandle
    startDate          ProjectSignupStartDate
    licenses           [ProjectSignupLicense]
    licensesComment    ProjectSignupLicenseComment      Maybe
    categories         [ProjectSignupCategory]
    categoriesComment  ProjectSignupCategoryComment     Maybe
    location           ProjectSignupLocation            Maybe
    legalStatus        ProjectSignupLegalStatus
    legalStatusComment ProjectSignupLegalStatusComment  Maybe
    coopStatus         ProjectSignupCoopStatus
    applicantRole      ProjectSignupApplicantRole
    mission            ProjectSignupMission
    goals              ProjectSignupGoals
    fundsUse           ProjectSignupFundsUse
    additionalInfo     ProjectSignupAdditionalInfo      Maybe

BlogPost
    ts            UTCTime
    title         Text
    handle        Text
    user          UserId
    project       ProjectId
    discussion    DiscussionId
    topContent    Markdown
    bottomContent Markdown     Maybe

    UniqueBlogPost project handle
    UniqueBlogPostDiscussion discussion

    deriving Show

ProjectUserRole
    project ProjectId
    user    UserId
    role    Role

    UniqueProjectUserRole project user role

    deriving Show

ProjectUpdate
    updatedTs   UTCTime
    project     ProjectId
    author      UserId
    description Text
    blurb       MarkdownDiff

ProjectLastUpdate
    project ProjectId
    update  ProjectUpdateId

    UniqueProjectLastUpdate project

-- Parts of Pledge are duplicated in EventDeletedPledge.
-- If you modify Pledge, be sure to (possibly) modify
-- EventDeletedPledge as well!
Pledge
    createdTs    UTCTime default=now()
    user         UserId
    project      ProjectId
    shares       Int64
    fundedShares Int64

    UniquePledge user project

Invite
    createdTs  UTCTime
    project    ProjectId
    code       Text
    user       UserId
    role       Role
    tag        Text
    redeemed   Bool
    redeemedTs UTCTime   Maybe
    redeemedBy UserId    Maybe

    UniqueInvite code

VolunteerApplication
    createdTs        UTCTime
    project          ProjectId
    user             UserId
    name             Text
    email            Text
    otherContactInfo Text      Maybe
    website          Text      Maybe
    location         Text      Maybe
    experience       Textarea  Maybe
    comments         Textarea  Maybe

Interest
    description Text

VolunteerInterest
    volunteer VolunteerApplicationId
    interest  InterestId

UserNotification
    createdTs UTCTime
    type      UserNotificationType
    to        UserId
    content   Markdown
    archived  Bool                   -- Put into the "trash bin".

    UniqueUserNotification createdTs type to

-- Notifications by projects watched by a user.
ProjectNotification
    createdTs UTCTime
    type      ProjectNotificationType
    to        UserId
    project   ProjectId              -- An "associated" project.
    content   Markdown
    archived  Bool                   -- Put into the "trash bin".

    UniqueProjectNotification createdTs type to project

-- Notification emails that are sent by the email daemon.  'UserId's
-- are used instead of email addresses to "force" the daemon to look
-- up the actual email address.  If a user changes it, anything queued
-- up goes to the right place.
UserNotificationEmail
    createdTs UTCTime
    type      UserNotificationType
    to        UserId
    content   Markdown

    UniqueUserNotificationEmail createdTs type to

-- Email notifications by projects watched by a user.
ProjectNotificationEmail
    createdTs UTCTime
    type      ProjectNotificationType
    to        UserId
    project   ProjectId
    content   Markdown

    UniqueProjectNotificationEmail createdTs type to project

-- A many-to-one relationship linking notifications sent to moderators about an
-- unapproved comment. When the comment is approved, all such notifications are
-- deleted automatically (as they are no longer relevant) - this table allows
-- us to keep track of which notifications to delete.
UnapprovedCommentNotification
    comment      CommentId
    notification UserNotificationId


WikiPage
    createdTs       UTCTime         default=now()
    user            UserId
    project         ProjectId
    discussion      DiscussionId
    permissionLevel PermissionLevel

    UniqueWikiPageDiscussion discussion

    deriving Eq


WikiTarget
    page            WikiPageId
    project         ProjectId
    target          Text
    language        Language

    UniqueWikiTarget project language target

WikiEdit
    ts          UTCTime
    user        UserId
    page        WikiPageId
    language    Language
    content     Markdown
    comment     Text       Maybe

    deriving Eq

WikiLastEdit
    page WikiPageId
    edit WikiEditId
    language Language

    UniqueWikiLastEdit page language

WikiTranslation
    edit WikiEditId
    source WikiEditId
    complete Bool

Discussion
    nothing Int64

Comment
    createdTs   UTCTime

    -- "Unestablished" users may still make comments, but they must be approved
    -- by a moderator. "Established" users' comments are marked as approved by
    -- themselves (though this does not mean they are a moderator).
    approvedTs  UTCTime      Maybe
    approvedBy  UserId       Maybe

    discussion  DiscussionId
    parent      CommentId    Maybe
    user        UserId
    text        Markdown
    depth       Int
    visibility  Visibility         default='VisPublic'
    language    Language

    deriving Eq Show

-- A comment has zero or more ancestors: its parent, grandparent, great
-- grandparent, etc.
CommentAncestor
    comment  CommentId
    ancestor CommentId

    UniqueCommentAncestor comment ancestor

    deriving Show

-- A comment-closed relation.
CommentClosing
    ts       UTCTime
    closedBy UserId
    reason   Markdown
    comment  CommentId

    UniqueCommentClosing comment

-- A comment-retracted relation.
CommentRetracting
    ts      UTCTime
    reason  Markdown
    comment CommentId

    UniqueCommentRetracting comment

-- A flagging event, with one or more reason stored in CommentFlaggingReason.
CommentFlagging
    ts      UTCTime
    flagger UserId
    comment CommentId
    message Markdown  Maybe -- Optional message provided by the flagger.

    -- Only one flagging can exist for a comment at any given time.
    UniqueCommentFlagging comment

-- A reason associated with a comment flagging. One-to-many relation.
CommentFlaggingReason
    flagging CommentFlaggingId
    reason   FlagReason

    UniqueCommentFlaggingReason flagging reason

-- A rethread event. Moderators may move comment threads around as they wish.
Rethread
    ts         UTCTime                  -- Timestamp.
    moderator  UserId                   -- The moderator that rethreaded.
    oldComment CommentId                -- The old comment that was rethreaded.
    newComment CommentId
    reason     Text                     -- The reason for rethreading.

-- An individual comment-rethread relation.
CommentRethread
    rethread   RethreadId
    oldComment CommentId
    newComment CommentId

Tag
    name      Text
    UniqueTag name

ProjectTag
    project ProjectId
    tag     TagId

    UniqueProjectTag project tag

CommentTag
    comment CommentId
    tag     TagId
    user    UserId
    count   Int       default=1

    UniqueCommentTag comment tag user

DeprecatedTag
    project ProjectId
    tag TagId
    reason Text

-- A Comment can have at most one Ticket (i.e. the comment can be marked as a
-- ticket)
Ticket
    createdTs UTCTime
    updatedTs UTCTime
    name      Text
    comment   CommentId

    UniqueTicket comment

    deriving Eq Ord

TicketClaiming
    ts         UTCTime
    user       UserId
    ticket     CommentId
    note       Text      Maybe

    UniqueTicketClaiming ticket

    deriving Show


TicketOldClaiming
    claimTs     UTCTime
    user        UserId
    ticket      CommentId
    note        Text      Maybe
    releaseNote Text     Maybe
    releasedTs  UTCTime

    deriving Show

Build
    bootTime UTCTime
    base     Text
    diff     Text

-- A User may be established by a number of different ways. Manual
-- establishment by a moderator is one of them.
ManualEstablishment
    establishedUser  UserId
    establishingUser UserId

    UniqueManualEstablishment establishedUser

TagColor
    tag   TagId
    user  UserId
    color Int

    UniqueTagColor tag user

    deriving Typeable

DefaultTagColor
    tag   TagId
    color Int

    UniqueDefaultTag tag

RoleEvent
    ts      UTCTime
    user    UserId
    role    Role
    project ProjectId
    added   Bool

Doc
    name           Text
    currentVersion WikiEditId

    UniqueDocName name

DocEvent
    ts             UTCTime
    doc            DocId
    blessedVersion WikiEditId

DatabaseVersion
    lastMigration Int

PledgeFormRendered
    ts      UTCTime
    order   Text
    project ProjectId
    user    UserId    Maybe

SharesPledged
    ts      UTCTime
    user    UserId
    project ProjectId
    shares  Int64
    render  PledgeFormRenderedId

-------------------------------------------------------------------------------
-- Snowdrift events. These are all combined into a single sum time in
-- Model.SnowdriftEvent.

-- An approved comment.
EventCommentPosted
    ts      UTCTime
    comment CommentId

-- An unapproved comment.
EventCommentPending
    ts      UTCTime
    comment CommentId

EventCommentRethreaded
    ts      UTCTime
    rethread RethreadId

-- An approved comment.
EventCommentClosing
    ts      UTCTime
    commentClosing CommentClosingId

EventTicketClaimed
    ts          UTCTime
    claim       TicketClaimingId    Maybe
    oldClaim    TicketOldClaimingId Maybe

EventTicketUnclaimed
    ts      UTCTime
    claim   TicketOldClaimingId

EventUserNotificationSent
    ts           UTCTime
    notification UserNotificationId

EventProjectNotificationSent
    ts           UTCTime
    notification ProjectNotificationId

-- Wiki page created event.
EventWikiPage
    ts       UTCTime
    wikiPage WikiPageId

-- Wiki edit made event.
EventWikiEdit
    ts       UTCTime
    wikiEdit WikiEditId

EventNewPledge
    ts            UTCTime
    sharesPledged SharesPledgedId

EventUpdatedPledge
    ts            UTCTime
    oldShares     Int64
    sharesPledged SharesPledgedId

EventDeletedPledge
    ts      UTCTime
    user    UserId
    project ProjectId
    shares  Int64

EventBlogPost
    ts UTCTime
    post BlogPostId

Image
    ts UTCTime
    uploader UserId
    project ProjectId Maybe
    name Text
    origin Text Maybe
    format ContentType
    data ByteString
    UniqueImageHandle name

UnnamedImage
    ts UTCTime
    uploader UserId
    project ProjectId Maybe
    name Text Maybe
    origin Text Maybe
    format ContentType
    data ByteString

WatchedSubthread
    ts UTCTime
    user UserId
    root CommentId
    deriving Eq Ord

