# This file's semantics are documented at
# https://docs.gitlab.com/ce/ci/yaml/README.html

include:
  # This is the source of image variables used below.
  - local: '/ci-support/docker/images.yml'

variables:
  SD_STACK_ARGS: "--stack-root ${CI_PROJECT_DIR}/stack-root"
  POSTGRES_DB: snowdrift_test

stages:
  - build and test
  - deploy

.build-and-test:
  stage: build and test
  cache:
    key:
      files:
        - stack.yaml.lock
    paths:
      - stack-root

build and test:
  extends: .build-and-test
  image: "${image_build_centos_7}"
  # Source: ci-support/docker/image-build-centos-7
  cache:
    key:
      prefix: "Centos 7"
  services:
    - postgres:9.3
  # | If this gets much longer, turn it into an external script.
  script:
    # Make sure stack/ghc picks up changes to template files.
    - touch website/src/Settings/StaticFiles.hs
    - PGUSER=postgres PGHOST=postgres stack ${SD_STACK_ARGS} test --fast

.deploy-build-common:
  extends: .build-and-test
  services:
    - postgres:9.3
  script:
    # Build for deploy, using --pedantic
    - PGUSER=postgres PGHOST=postgres DEPLOY=false ./ci-support/deploy
    - stack ${SD_STACK_ARGS} build --copy-bins --local-bin-path keter-bin keter
  # ... but don't force pedantry on people submitting MRs.
  allow_failure: true
  dependencies: []
  artifacts:
    paths:
      - SnowdriftReboot.keter
      - keter-bin/keter

deploy-build for Centos 7:
  extends: .deploy-build-common
  image: "${image_build_centos_7}"
  cache:
    key:
      prefix: "Centos 7"
  variables:
    UNSET_PGHOST_VAR: "true"

deploy-build for Ubuntu 14.04:
  extends: .deploy-build-common
  image: "${image_build_ubuntu_14_04}"
  cache:
    key:
      prefix: "Ubuntu 14.04"

deploy to Ubuntu 14.04:
  stage: deploy
  # Source: ci-support/docker/image-deploy/Dockerfile
  image: "${image_deploy}"
  cache:
    paths: []
  dependencies:
    - "deploy-build for Ubuntu 14.04"
  script:
    - BUILD=false ./ci-support/deploy
  only:
    # Only deploy from master.
    #
    # This is not a security measure, since someone could push a branch that
    # changes this line. It's a convenience. Security is maintained by only
    # allowing production secrets to be sent to protected branches.
    - master@snowdrift/snowdrift
  # The scheduled runs don't get deployed. FIXME: Why do we even have a
  # scheduled run?
  except:
    - schedules
  when: manual
  environment:
    name: production
    url: https://snowdrift.coop
